<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.coin.dao.IEthAddressDAO">
	<resultMap id="ethAddress_DB_Result" type="ethAddress">
		<result column="code" property="code" />
		<result column="type" property="type" />
		<result column="address" property="address" />
		<result column="label" property="label" />
		<result column="password" property="password" />
		<result column="user_id" property="userId" />
		<result column="initial_balance" property="initialBalance" />
		<result column="balance" property="balance" />
		<result column="available_datetime_start" property="availableDatetimeStart" />
		<result column="available_datetime_end" property="availableDatetimeEnd" />
		<result column="status" property="status" />
		<result column="create_datetime" property="createDatetime" />
		<result column="abandon_datetime" property="abandonDatetime" />
		<result column="update_datetime" property="updateDatetime" />
	</resultMap>
	<resultMap id="secret_DB_Result" type="ethAddress">
		<result column="code" property="code" />
		<result column="address" property="address" />
		<result column="password" property="password" />
		<result column="keystore_name" property="keystoreName" />
		<result column="keystore_content" property="keystoreContent" />
	</resultMap>
	<sql id="where_condition">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="code != null and code != '' ">
				AND t.code = #{code}
			</if>
			<if test="type != null and type != '' ">
				AND t.type = #{type}
			</if>
			<if test="typeList != null and typeList != '' ">
				AND t.type in 
                <foreach item="item" index="index" collection="typeList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
			<if test="address != null and address != '' ">
				AND t.address = #{address}
			</if>
			<if test="addressForQuery != null and addressForQuery != '' ">
				AND t.address like "%"#{addressForQuery}"%"
			</if>
			<if test="userId != null and userId != '' ">
				AND t.user_id = #{userId}
			</if>
			<if test="status != null and status != '' ">
				AND t.status = #{status}
			</if>
			<if test="availableDatetimeStart != null and availableDatetimeStart != '' ">
				<![CDATA[AND t.available_datetime_start >= #{availableDatetimeStart}]]>
			</if>
			<if test="availableDatetimeEnd != null and availableDatetimeEnd != '' ">
				<![CDATA[AND t.available_datetime_end <= #{availableDatetimeEnd}]]>
			</if>
			<if test="statusList != null and statusList != '' ">
				AND t.status in 
                <foreach item="item" index="index" collection="statusList" open="(" separator="," close=")">
	            	#{item}
                </foreach> 
			</if>
			<if test="today != null and today != '' ">
				<![CDATA[AND t.available_datetime_start <= #{today} AND t.available_datetime_end >= #{today}]]>
			</if>
			<if test="balanceStart != null and balanceStart != '' ">
				<![CDATA[AND t.balance >= #{balanceStart}]]>
			</if>
			<if test="balanceEnd != null and balanceEnd != '' ">
				<![CDATA[AND t.balance <= #{balanceEnd}]]>
			</if>
		</trim>
	</sql>
	<select id="select_ethAddress" parameterType="ethAddress" resultMap="ethAddress_DB_Result">
		SELECT
		t.code
		,t.type
		,t.address
		,t.label
		,t.user_id
		,t.initial_balance
		,t.balance
		,t.available_datetime_start
		,t.available_datetime_end
		,t.status
		,t.create_datetime
		,t.abandon_datetime
		,t.update_datetime
		FROM
		tcoin_eth_address t
		<include refid="where_condition" />
		<trim prefix="ORDER BY ">
			<if test="order != null and order != '' ">
				t.${order}
			</if>
		</trim>
	</select>
	
	<select id="select_ethAddress_secret" parameterType="ethAddress" resultMap="secret_DB_Result">
		SELECT
		t.code
		,t.address
		,t.password
		,t.keystore_name
		,t.keystore_content
		FROM
		tcoin_eth_address t
		<include refid="where_condition" />
	</select>

	<select id="select_ethAddress_count" parameterType="ethAddress"
		resultType="java.lang.Long">
		SELECT count(1) FROM tcoin_eth_address t
		<include refid="where_condition" />
	</select>
	
	<select id="select_totalBalance" parameterType="ethAddress"
		resultType="java.math.BigDecimal">
		SELECT COALESCE(SUM(balance),0) FROM tcoin_eth_address t
		<include refid="where_condition" />
	</select>

	<insert id="insert_ethAddress" parameterType="ethAddress">
		INSERT INTO
		tcoin_eth_address(
		code
		,type
		,address
		,label
		,password
		,user_id
		,initial_balance
		,balance
		,available_datetime_start
		,available_datetime_end
		,status
		,create_datetime
		,abandon_datetime
		,update_datetime
		,keystore_name
		,keystore_content
		)
		VALUES(
		#{code}
		,#{type}
		,#{address}
		,#{label}
		,#{password}
		,#{userId}
		,#{initialBalance}
		,#{balance}
		,#{availableDatetimeStart}
		,#{availableDatetimeEnd}
		,#{status}
		,#{createDatetime}
		,#{abandonDatetime}
		,#{updateDatetime}
		,#{keystoreName}
		,#{keystoreContent}
		)
	</insert>

    <update id="update_abandon" parameterType="ethAddress">
		UPDATE tcoin_eth_address
		SET
		status = #{status}
		,abandon_datetime = #{abandonDatetime}
		,update_datetime = #{updateDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="update_balance" parameterType="ethAddress">
		UPDATE tcoin_eth_address
		SET
		balance = #{balance}
		,update_datetime = #{updateDatetime}
		WHERE code = #{code}
	</update>
	
	<update id="update_status" parameterType="ethAddress">
		UPDATE tcoin_eth_address
		SET
		status = #{status}
		,update_datetime = #{updateDatetime}
		WHERE code = #{code}
	</update>

</mapper>